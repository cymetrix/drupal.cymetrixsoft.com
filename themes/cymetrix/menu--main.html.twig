{% import _self as menus %}

{{ menus.build_menu(items, attributes, 0) }}

{% macro build_menu(items, attributes, menu_level) %}
  {% if items %}
    {%
      set ul_classes = [
        menu_level == 0 ? 'navbar-nav justify-content-end flex-wrap megamenu',
        menu_level > 0  ? 'dropdown-menu',
        'nav-level-' ~ menu_level,
      ]
    %}
    <ul{{ attributes.addClass(ul_classes) }}>
      {% for item in items %}
        {{ menus.add_link(item, attributes.removeClass(ul_classes), menu_level) }}
      {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}

{% macro add_link(item, attributes, menu_level) %}
  {%
    set list_item_classes = [
      'menu-item',
      item.is_expanded ? 'dropdown' 
    ]
  %}
  {%
    set link_class = [
      menu_level == 0 ? 'nav-link',
      item.in_active_trail ? 'active',
      menu_level == 0 and (item.is_expanded or item.is_collapsed) ? 'dropdown-toggle',
      menu_level > 0 ? 'dropdown-item',
    ]
  %}
  {%
    set toggle_class = [
    ]
  %}
  <li{{ item.attributes.addClass(list_item_classes) }}>
      
      
     
    {% if item.below %}
      {{ link(item.title, item.url, { 'class': link_class, 'data-bs-toggle': 'dropdown', 'aria-expanded': 'false' }) }}
      {{ menus.build_menu(item.below, attributes, menu_level + 1) }}
      <span class="menu-item-description">{{ item.original_link.pluginDefinition.description }}</span>
    {% else %}
      <a href="{{ item.url }}" class="{{ link_class|join(' ') }}">{{ item.title }} </a>
      {% if item.original_link.pluginDefinition.description %}
        <span class="menu-item-description">{{ item.original_link.pluginDefinition.description }}</span>
      {% endif %}
    {% endif %}
  </li>
{% endmacro %}


{#{% for item in items %}#}
{#  <li{{ item.attributes.addClass('menu-item') }}>#}
{#    <a href="{{ item.url }}">{{ item.title }}</a>#}
{#    {% if item.below %}#}
{#      <ul class="menu">#}
{#        {{ menus.menu_links(item.below, attributes, menu_level + 1) }}#}
{#      </ul>#}
{#    {% endif %}#}
{#  </li>#}
{#{% endfor %}#}


{#{% import _self as menus %}#}


{#{{ menus.build_menu(items, attributes, 0) }}#}

{#{% macro build_menu(items, attributes, menu_level) %}#}
{#  {% import _self as menus %}#}
{#  {% if items %}#}
{#    {%#}
{#      set ul_classes = [#}
{#        menu_level == 0 ? 'navbar-nav justify-content-end flex-wrap',#}
{#        menu_level > 0 ? 'dropdown-menu',#}
{#        'nav-level-' ~ menu_level,#}
{#      ]#}
{#    %}#}
{#    <ul{{ attributes.addClass(ul_classes) }}>#}
{#    {% for item in items %}#}
{#      {{ menus.add_link(item, attributes.removeClass(ul_classes), menu_level) }}#}
{#    {% endfor %}#}
{#    </ul>#}
{#  {% endif %}#}
{#{% endmacro %}#}

{#{% macro add_link(item, attributes, menu_level) %}#}
{#  {% import _self as menus %}#}
{#  {%#}
{#    set list_item_classes = [#}
{#    'menu-item',#}
{#    item.is_expanded ? 'dropdown'#}
{#  ]#}
{#  %}#}
{#  {%#}
{#    set link_class = [#}
{#      menu_level == 0 ? 'nav-link',#}
{#      item.in_active_trail ? 'active',#}
{#      menu_level == 0 and (item.is_expanded or item.is_collapsed) ? 'dropdown-toggle',#}
{#      menu_level > 0 ? 'dropdown-item',#}
{#    ]#}
{#  %}#}
{#  {%#}
{#    set toggle_class = [#}
{#    ]#}
{#  %}#}
{#  <li{{ item.attributes.addClass(list_item_classes) }}>#}
{#    {% if menu_level == 0 and item.below %}#}
{#      {{ link(item.title, item.url, { 'class': link_class, 'role': 'button', 'data-bs-toggle': 'dropdown', 'aria-expanded': 'false', 'title': ('Expand menu' | t) ~ ' ' ~ item.title }) }}#}
{#      {{ menus.build_menu(item.below, attributes, menu_level + 1) }}#}
{#    {% else %}#}
{#      {{ link(item.title, item.url, { 'class': link_class }) }}#}
{#    {% endif %}#}
{#  </li>#}
{#{% endmacro %}#}

